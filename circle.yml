version: 2

jobs:
  5.5-linux:
    docker:
      - image: codevapor/swift:4.1
      - image: mysql:5.5
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          # MYSQL_ROOT_HOST: %
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - checkout
      - run: 
          name: Compile code
          command: swift build
      - run: 
          name: Run unit tests
          command: swift test
  5.6-linux:
    docker:
      - image: codevapor/swift:4.1
      - image: mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          # MYSQL_ROOT_HOST: %
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - checkout
      - run: 
          name: Compile code
          command: swift build
      - run: 
          name: Run unit tests
          command: swift test
  5.7-linux:
    docker:
      - image: codevapor/swift:4.1
      - image: mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          # MYSQL_ROOT_HOST: %
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - checkout
      - run: 
          name: Compile code
          command: swift build
      - run: 
          name: Run unit tests
          command: swift test
  8.0-linux:
    docker:
      - image: codevapor/swift:4.1
      - image: mysql:8.0
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          # MYSQL_ROOT_HOST: %
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - checkout
      - run: 
          name: Compile code
          command: swift build
      - run: 
          name: Run unit tests
          command: swift test -Xswiftc -DSSL_TESTS
  mariadb-10.3-linux:
    docker:
      - image: codevapor/swift:4.1
      - image: mariadb:10.3
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          # MYSQL_ROOT_HOST: %
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - checkout
      - run: 
          name: Compile code
          command: swift build
      - run: 
          name: Run unit tests
          command: swift test
  8.0-linux-fluent:
    docker:
      - image: codevapor/swift:4.1
      - image: mysql:8.0.3
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - run:
          name: Clone Fluent MySQL
          command: git clone -b master https://github.com/vapor/fluent-mysql.git
          working_directory: ~/
      - run:
          name: Switch Fluent MySQL to this MySQL revision
          command: swift package edit MySQL --revision $CIRCLE_SHA1
          working_directory: ~/fluent-mysql
      - run:
          name: Run Fluent MySQL unit tests
          command: swift test
          working_directory: ~/fluent-mysql
  8.0-linux-4.2:
    docker:
      - image: norionomura/swift:swift-4.2-branch
      - image: mysql:8.0
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: vapor_database
          # MYSQL_ROOT_HOST: %
          MYSQL_USER: vapor_username
          MYSQL_PASSWORD: vapor_password
    steps:
      - checkout
      - run: 
          name: Compile code
          command: swift build
      - run: 
          name: Run unit tests
          command: swift test -Xswiftc -DSSL_TESTS
  linux-release:
    docker:
      - image: codevapor/swift:4.1
    steps:
      - checkout
      - run: 
          name: Compile code with optimizations
          command: swift build -c release
workflows:
  version: 2
  tests:
    jobs:
      - 5.5-linux
      - 5.6-linux
      - 5.7-linux
      - 8.0-linux
      - 8.0-linux-4.2
      - 8.0-linux-fluent
      - mariadb-10.3-linux
      - linux-release
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master 
    jobs:
      - 8.0-linux

